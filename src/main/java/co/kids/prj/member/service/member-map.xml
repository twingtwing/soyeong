<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.kids.prj.member.service.MemberMapper">
	<select id="memberSelectList" parameterType="String"
		resultType="co.kids.prj.member.service.MemberVO">
		SELECT * FROM MEMBER WHERE
		STATUS NOT IN('D')
		ORDER BY
		JOINDATE
	</select>
	<select id="memberSelect"
		parameterType="co.kids.prj.member.service.MemberVO" resultType="co.kids.prj.member.service.MemberVO">
		SELECT * FROM MEMBER WHERE
		ID = #{id}
		<if test="password !=null">
			AND PASSWORD = #{password}
		</if>
	</select>
	<insert id="memberInsert"
		parameterType="co.kids.prj.member.service.MemberVO">
		INSERT INTO
		MEMBER(ID,PASSWORD,TEL,AUTHOR,GENDER,JOINDATE,STATUS,NAME,NAVER,KAKAO) 
		VALUES(#{id},#{password},#{tel},default,#{gender},default,default,#{name},#{naver},#{kakao})
	</insert>
	<update id="memberUpdate"
		parameterType="co.kids.prj.member.service.MemberVO">
		UPDATE MEMBER SET PASSWORD = #{password}, TEL =
		#{tel}, NAME = #{name},
		STATUS='U' WHERE ID=#{id}
	</update>

	<update id="memberDelete"
		parameterType="co.kids.prj.member.service.MemberVO">
		UPDATE MEMBER SET
		STATUS = 'D', NAVER = '', KAKAO = '' 
		WHERE ID = #{id} AND PASSWORD = #{password}
	</update>
	
	<update id="memberAuthorUpdate" parameterType="co.kids.prj.member.service.MemberVO">
		UPDATE MEMBER SET AUTHOR = #{author} WHERE ID = #{id}
	</update>
	
	<select id="memberSearch" resultType="co.kids.prj.member.service.MemberVO" parameterType="co.kids.prj.member.service.MemberVO">
		SELECT * FROM MEMBER 
		<where>
			<if test="status == ''">AND STATUS NOT IN('D')</if>
			<if test="status != ''">AND STATUS NOT IN('D')</if>
			<if test="author != ''">AND AUTHOR = #{author}</if>
			<if test="id != ''">AND ID LIKE '%' || #{id} || '%'</if>
			<if test="name != ''">AND NAME LIKE '%' || #{name} || '%'</if>
		</where>
		ORDER BY JOINDATE
	</select>
	
	<update id="changePw" parameterType="co.kids.prj.member.service.MemberVO">
		UPDATE MEMBER 
		SET PASSWORD = #{password}, STATUS='U' 
		WHERE ID=#{id}
	</update>
	
	<update id="joinSNS" parameterType="co.kids.prj.member.service.MemberVO">
		UPDATE MEMBER 
		<set>
			<if test="naver != null">NAVER = #{naver}</if>
			<if test="kakao != null">KAKAO = #{kakao}</if>
		</set>
		WHERE ID=#{id}
	</update>
	
	<select id="memberSales" parameterType="co.kids.prj.reservation.service.ReservationVO" resultType="co.kids.prj.reservation.service.ReservationVO">
	SELECT B.*, L.FEE*(B.CHECKOUT-B.CHECKIN) AS FEE, L.RNAME ,M.NAME
	FROM BOOKING B
	INNER JOIN LODGING L ON B.RNO = L.RNO
	INNER JOIN MEMBER M ON B.ID = M.ID
	WHERE L.ID = #{id}
	<if test="startDate != null"><![CDATA[ AND B.BOOKDATE > TO_DATE(#{startDate}, 'YYYY-MM-DD' )]]></if>
	<if test="endDate != null"><![CDATA[ AND B.BOOKDATE <  TO_DATE(#{endDate}, 'YYYY-MM-DD' ) ]]></if>
	ORDER BY B.BOOKDATE, L.RNAME
	</select>
	
	<update id="changeRefund" parameterType="co.kids.prj.reservation.service.ReservationVO">
	UPDATE BOOKING
	SET BOOKREFUND = #{bookrefund}
	WHERE BOOKNO = #{bookno }
	</update>

	<select id="totalHost">
	SELECT COUNT(B.*), SUM(L.FEE*(B.CHECKOUT-B.CHECKIN) AS FEE), COUNT(R.*), SUM(R.RVSTAR)
	FROM LODGING L
	INNER JOIN BOOKING B ON L.RNO = B.RNO 
	INNER JOIN REVIEW R ON L.RNO = R.RNO
	WHERE L.ID = #{id}
	AND SDATE BETWEEN '2020-11-01' AND '2021-11-30'
	GROUP BY TO_CHAR(SDATE, 'YYYY-MM')
	ORDER BY B.BOOKDATE, L.RNAME
	</select>
	
</mapper>